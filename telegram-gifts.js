import TelegramBot from 'node-telegram-bot-api';
import fs from 'fs';
import fetch from 'node-fetch';

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const token = '7222760906:AAHOv-zgIAngYZAJFnAK7WZ3MJWXpd8UWAk';

// –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
const chatIdFile = 'chat-id.json';
const cacheFile = 'gifts-cache.json';

// –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö): 1 –º–∏–Ω—É—Ç–∞ = 60000 –º—Å
const CHECK_INTERVAL = 60000;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: false });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID —á–∞—Ç–∞ –≤ —Ñ–∞–π–ª
function saveChatId(id) {
  try {
    fs.writeFileSync(chatIdFile, JSON.stringify({ chatId: id }));
    console.log(`ID —á–∞—Ç–∞ ${id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª ${chatIdFile}`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ ID —á–∞—Ç–∞: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ ID —á–∞—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
function loadChatId() {
  try {
    if (fs.existsSync(chatIdFile)) {
      const data = JSON.parse(fs.readFileSync(chatIdFile, 'utf8'));
      return data.chatId;
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ID —á–∞—Ç–∞: ${error.message}`);
  }
  return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
function saveGiftsCache(gifts) {
  try {
    fs.writeFileSync(cacheFile, JSON.stringify(gifts, null, 2));
    console.log(`–ö—ç—à –ø–æ–¥–∞—Ä–∫–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω (${gifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤)`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—ç—à–∞: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
function loadGiftsCache() {
  try {
    if (fs.existsSync(cacheFile)) {
      const data = JSON.parse(fs.readFileSync(cacheFile, 'utf8'));
      console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω –∫—ç—à —Å ${data.length} –ø–æ–¥–∞—Ä–∫–∞–º–∏`);
      return data;
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—ç—à–∞: ${error.message}`);
  }
  return [];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∫—ç—à–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
function saveGiftsCacheHistory(gifts) {
  try {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
    const now = new Date();
    const dateStr = now.toISOString()
      .replace(/T/, '_')
      .replace(/:/g, '-')
      .replace(/\..+/, '');
    
    const historyFile = `gifts-cache-history-${dateStr}.json`;
    
    fs.writeFileSync(historyFile, JSON.stringify(gifts, null, 2));
    console.log(`–ò—Å—Ç–æ—Ä–∏—è –∫—ç—à–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª ${historyFile}`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∫—ç—à–∞: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –ø–æ–¥–∞—Ä–∫–∏
function haveGiftsChanged(oldGifts, newGifts) {
  // –ï—Å–ª–∏ —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤
  if (oldGifts.length !== newGifts.length) {
    return true;
  }
  
  // –°–æ–∑–¥–∞–µ–º –º–∞–ø—ã —Å ID -> –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const oldGiftsMap = new Map(oldGifts.map(gift => [gift.id, gift]));
  const newGiftsMap = new Map(newGifts.map(gift => [gift.id, gift]));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ ID –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞ –µ—Å—Ç—å –≤ –Ω–æ–≤–æ–º
  for (const id of oldGiftsMap.keys()) {
    if (!newGiftsMap.has(id)) {
      return true; // –ù–∞—à–ª–∏ –ø–æ–¥–∞—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —É–¥–∞–ª–µ–Ω
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ ID –∏–∑ –Ω–æ–≤–æ–≥–æ –∫—ç—à–∞ –µ—Å—Ç—å –≤ —Å—Ç–∞—Ä–æ–º
  for (const id of newGiftsMap.keys()) {
    if (!oldGiftsMap.has(id)) {
      return true; // –ù–∞—à–ª–∏ –Ω–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫
    }
  }
  
  // –ü–æ–¥–∞—Ä–∫–∏ —Ç–µ –∂–µ —Å–∞–º—ã–µ
  return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤ –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–æ–≤—ã—Ö
function findNewGifts(oldGifts, newGifts) {
  // –°–æ–∑–¥–∞–µ–º Set –∏–∑ id —Å—Ç–∞—Ä—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const oldGiftIds = new Set(oldGifts.map(gift => gift.id));
  
  // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥–∞—Ä–∫–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å—Ç–∞—Ä–æ–º –º–∞—Å—Å–∏–≤–µ
  return newGifts.filter(gift => !oldGiftIds.has(gift.id));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
function formatGift(gift) {
  const emoji = gift.sticker?.emoji || 'üéÅ';
  const starCount = gift.star_count || 0;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∞—Ä–∫–µ
  let message = `${emoji} *–ü–æ–¥–∞—Ä–æ–∫*\n`;
  message += `üí´ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${starCount} –∑–≤–µ–∑–¥\n`;
  message += `üÜî ID: \`${gift.id}\`\n`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ —Å—Ç–∏–∫–µ—Ä–∞
  if (gift.sticker && gift.sticker.type) {
    message += `üìã –¢–∏–ø: ${gift.sticker.type}\n`;
  }
  
  return message;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∞—Ä–∫–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function generateDetailedInfo(gift) {
  const lines = [];
  lines.push(`ID: ${gift.id}`);
  lines.push(`–ó–≤–µ–∑–¥—ã: ${gift.star_count}`);
  
  if (gift.sticker) {
    lines.push(`–≠–º–æ–¥–∑–∏: ${gift.sticker.emoji}`);
    lines.push(`–¢–∏–ø: ${gift.sticker.type}`);
    lines.push(`–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: ${gift.sticker.is_animated ? '–î–∞' : '–ù–µ—Ç'}`);
    lines.push(`–í–∏–¥–µ–æ: ${gift.sticker.is_video ? '–î–∞' : '–ù–µ—Ç'}`);
    if (gift.sticker.custom_emoji_id) {
      lines.push(`Custom Emoji ID: ${gift.sticker.custom_emoji_id}`);
    }
  }
  
  return lines.join('\n');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–æ–≤ —á–µ—Ä–µ–∑ getAvailableGifts
async function getAvailableGifts() {
  try {
    // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
    const response = await fetch(`https://api.telegram.org/bot${token}/getAvailableGifts`);
    
    if (!response.ok) {
      throw new Error(`HTTP –æ—à–∏–±–∫–∞: ${response.status}`);
    }
    
    const data = await response.json();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
    if (!data.ok) {
      throw new Error(data.description || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ API');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ –ø—É—Ç–∏ result.gifts
    if (!data.result || !Array.isArray(data.result.gifts)) {
      console.log('–ü–æ–¥–∞—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –∏–º–µ—é—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
      return [];
    }
    
    return data.result.gifts;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤:', error.message);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async function checkAndNotify(chatId) {
  try {
    console.log(`[${new Date().toLocaleTimeString()}] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤...`);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à
    const cachedGifts = loadGiftsCache();
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤
    const currentGifts = await getAvailableGifts();
    
    if (currentGifts.length === 0) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤');
      return;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ (–∫—ç—à –ø—É—Å—Ç), –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–∞—Ä–∫–∏
    if (cachedGifts.length === 0) {
      console.log(`–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫, —Å–æ—Ö—Ä–∞–Ω—è–µ–º ${currentGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –∫—ç—à`);
      saveGiftsCache(currentGifts);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
      await bot.sendMessage(chatId, 
        `üéÅ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏*\n\n–ù–∞–π–¥–µ–Ω–æ ${currentGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤.`, 
        { parse_mode: 'Markdown' }
      );
      
      // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∞—Ä–∫–∞—Ö
      let detailedInfo = currentGifts.map((gift, index) => {
        return `=== –ü–æ–¥–∞—Ä–æ–∫ #${index + 1} ===\n${generateDetailedInfo(gift)}\n`;
      }).join('\n');
      
      fs.writeFileSync('telegram-gifts-details.txt', detailedInfo);
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ä–∫–∞—Ö –≤ —Ñ–∞–π–ª telegram-gifts-details.txt');
      
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –ø–æ–¥–∞—Ä–∫–∏
    const giftsChanged = haveGiftsChanged(cachedGifts, currentGifts);
    
    // –ï—Å–ª–∏ –ø–æ–¥–∞—Ä–∫–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫—ç—à–∞
    if (giftsChanged) {
      console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫—ç—à–∞...');
      saveGiftsCacheHistory(cachedGifts);
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–µ –ø–æ–¥–∞—Ä–∫–∏
    const newGifts = findNewGifts(cachedGifts, currentGifts);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ–¥–∞—Ä–∫–æ–≤
    const removedCount = cachedGifts.length - (currentGifts.length - newGifts.length);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
    saveGiftsCache(currentGifts);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ –ø–æ–¥–∞—Ä–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (newGifts.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${newGifts.length} –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await bot.sendMessage(chatId, 
        `üîî *–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –ø–æ–¥–∞—Ä–∫–∏!*\n\n–ù–∞–π–¥–µ–Ω–æ ${newGifts.length} –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤.`, 
        { parse_mode: 'Markdown' }
      );
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º –ø–æ–¥–∞—Ä–∫–µ
      for (const gift of newGifts) {
        const message = formatGift(gift);
        await bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞ —á–µ—Ä–µ–∑ sendPhoto, –∞ –Ω–µ —Å–∞–º —Å—Ç–∏–∫–µ—Ä
        // Emoji-—Å—Ç–∏–∫–µ—Ä—ã –Ω–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —á–µ—Ä–µ–∑ sendSticker
        if (gift.sticker && gift.sticker.thumbnail && gift.sticker.thumbnail.file_id) {
          try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—É —Å—Ç–∏–∫–µ—Ä–∞ –∫–∞–∫ —Ñ–æ—Ç–æ
            await bot.sendPhoto(chatId, gift.sticker.thumbnail.file_id, {
              caption: `–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∏–∫–µ—Ä–∞ (${gift.sticker.emoji})`
            });
          } catch (stickerError) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞:', stickerError.message);
          }
        }
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        await new Promise(resolve => setTimeout(resolve, 300));
      }
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤, –Ω–æ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–µ
      if (removedCount > 0) {
        console.log(`–£–¥–∞–ª–µ–Ω–æ ${removedCount} –ø–æ–¥–∞—Ä–∫–æ–≤`);
        await bot.sendMessage(chatId, 
          `üìâ *–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤*\n\n–£–¥–∞–ª–µ–Ω–æ ${removedCount} –ø–æ–¥–∞—Ä–∫–æ–≤.`, 
          { parse_mode: 'Markdown' }
        );
      } else {
        console.log('–ù–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤:', error.message);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
async function startMonitoring() {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID —á–∞—Ç–∞
  const chatId = loadChatId();
  
  if (!chatId) {
    console.log('ID —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É.');
    startBotForChatId();
    return;
  }
  
  console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID —á–∞—Ç–∞: ${chatId}`);
  console.log(`–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ ${CHECK_INTERVAL / 1000} —Å–µ–∫—É–Ω–¥.`);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  await bot.sendMessage(chatId, 
    `ü§ñ *–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞–ø—É—â–µ–Ω*\n\n–ë—É–¥—É –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö.`, 
    { parse_mode: 'Markdown' }
  );
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–∞–∑—É
  await checkAndNotify(chatId);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  setInterval(() => checkAndNotify(chatId), CHECK_INTERVAL);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞
function startBotForChatId() {
  console.log('–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞...');
  console.log('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É, —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å ID —á–∞—Ç–∞');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∂–∏–º polling
  bot.startPolling();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
  bot.onText(/\/start/, async (msg) => {
    const receivedChatId = msg.chat.id;
    console.log(`–ü–æ–ª—É—á–µ–Ω ID —á–∞—Ç–∞: ${receivedChatId}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —á–∞—Ç–∞
    if (saveChatId(receivedChatId)) {
      await bot.sendMessage(receivedChatId, 
        `‚úÖ –í–∞—à ID —á–∞—Ç–∞ (${receivedChatId}) —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\n\n–¢–µ–ø–µ—Ä—å –∑–∞–ø—É—â—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤.`
      );
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
      bot.stopPolling();
      startMonitoring();
    } else {
      await bot.sendMessage(receivedChatId, 
        '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à ID —á–∞—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º.'
      );
    }
  });
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
startMonitoring().catch(error => {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:', error.message);
}); 