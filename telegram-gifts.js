import TelegramBot from 'node-telegram-bot-api';
import fs from 'fs';
import fetch from 'node-fetch';
import path from 'path';

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const token = '7222760906:AAHOv-zgIAngYZAJFnAK7WZ3MJWXpd8UWAk';

// –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ —ç—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π volume)
const dataDir = process.env.DATA_DIR || path.join(process.cwd(), 'data');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (!fs.existsSync(dataDir)) {
  fs.mkdirSync(dataDir, { recursive: true });
  console.log(`–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö: ${dataDir}`);
}

// –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
const chatIdFile = path.join(dataDir, 'chat-id.json');
const cacheFile = path.join(dataDir, 'gifts-cache.json');

// –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö): 10 —Å–µ–∫—É–Ω–¥ = 10000 –º—Å
const CHECK_INTERVAL = Number(process.env.CHECK_INTERVAL) || 10000;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: false });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID —á–∞—Ç–∞ –≤ —Ñ–∞–π–ª
function saveChatId(id) {
  try {
    fs.writeFileSync(chatIdFile, JSON.stringify({ chatId: id }));
    console.log(`ID —á–∞—Ç–∞ ${id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª ${chatIdFile}`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ ID —á–∞—Ç–∞: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ ID —á–∞—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
function loadChatId() {
  try {
    if (fs.existsSync(chatIdFile)) {
      const data = JSON.parse(fs.readFileSync(chatIdFile, 'utf8'));
      return data.chatId;
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ID —á–∞—Ç–∞: ${error.message}`);
  }
  return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
function saveGiftsCache(gifts) {
  try {
    fs.writeFileSync(cacheFile, JSON.stringify(gifts, null, 2));
    console.log(`–ö—ç—à –ø–æ–¥–∞—Ä–∫–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω (${gifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤)`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—ç—à–∞: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
function loadGiftsCache() {
  try {
    if (fs.existsSync(cacheFile)) {
      const data = JSON.parse(fs.readFileSync(cacheFile, 'utf8'));
      console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω –∫—ç—à —Å ${data.length} –ø–æ–¥–∞—Ä–∫–∞–º–∏`);
      return data;
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—ç—à–∞: ${error.message}`);
  }
  return [];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∫—ç—à–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
function saveGiftsCacheHistory(gifts) {
  try {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
    const now = new Date();
    const dateStr = now.toISOString()
      .replace(/T/, '_')
      .replace(/:/g, '-')
      .replace(/\..+/, '');
    
    const historyFile = path.join(dataDir, `gifts-cache-history-${dateStr}.json`);
    
    fs.writeFileSync(historyFile, JSON.stringify(gifts, null, 2));
    console.log(`–ò—Å—Ç–æ—Ä–∏—è –∫—ç—à–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª ${historyFile}`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∫—ç—à–∞: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –ø–æ–¥–∞—Ä–∫–∏
function haveGiftsChanged(oldGifts, newGifts) {
  // –ï—Å–ª–∏ —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤
  if (oldGifts.length !== newGifts.length) {
    return true;
  }
  
  // –°–æ–∑–¥–∞–µ–º –º–∞–ø—ã —Å ID -> –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const oldGiftsMap = new Map(oldGifts.map(gift => [gift.id, gift]));
  const newGiftsMap = new Map(newGifts.map(gift => [gift.id, gift]));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ ID –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞ –µ—Å—Ç—å –≤ –Ω–æ–≤–æ–º
  for (const id of oldGiftsMap.keys()) {
    if (!newGiftsMap.has(id)) {
      return true; // –ù–∞—à–ª–∏ –ø–æ–¥–∞—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —É–¥–∞–ª–µ–Ω
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ ID –∏–∑ –Ω–æ–≤–æ–≥–æ –∫—ç—à–∞ –µ—Å—Ç—å –≤ —Å—Ç–∞—Ä–æ–º
  for (const id of newGiftsMap.keys()) {
    if (!oldGiftsMap.has(id)) {
      return true; // –ù–∞—à–ª–∏ –Ω–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫
    }
  }
  
  // –ü–æ–¥–∞—Ä–∫–∏ —Ç–µ –∂–µ —Å–∞–º—ã–µ
  return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤ –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–æ–≤—ã—Ö
function findNewGifts(oldGifts, newGifts) {
  // –°–æ–∑–¥–∞–µ–º Set –∏–∑ id —Å—Ç–∞—Ä—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const oldGiftIds = new Set(oldGifts.map(gift => gift.id));
  
  // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥–∞—Ä–∫–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å—Ç–∞—Ä–æ–º –º–∞—Å—Å–∏–≤–µ
  return newGifts.filter(gift => !oldGiftIds.has(gift.id));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
function findRemovedGifts(oldGifts, newGifts) {
  // –°–æ–∑–¥–∞–µ–º Set –∏–∑ id –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const newGiftIds = new Set(newGifts.map(gift => gift.id));
  
  // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥–∞—Ä–∫–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –Ω–æ–≤–æ–º –º–∞—Å—Å–∏–≤–µ
  return oldGifts.filter(gift => !newGiftIds.has(gift.id));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ Markdown
function safeMarkdown(text) {
  if (!text) return '';
  
  // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
  return String(text)
    .replace(/\_/g, '\\_')
    .replace(/\*/g, '\\*')
    .replace(/\[/g, '\\[')
    .replace(/\]/g, '\\]')
    .replace(/\(/g, '\\(')
    .replace(/\)/g, '\\)')
    .replace(/\~/g, '\\~')
    .replace(/\`/g, '\\`')
    .replace(/\>/g, '\\>')
    .replace(/\#/g, '\\#')
    .replace(/\+/g, '\\+')
    .replace(/\-/g, '\\-')
    .replace(/\=/g, '\\=')
    .replace(/\|/g, '\\|')
    .replace(/\{/g, '\\{')
    .replace(/\}/g, '\\}')
    .replace(/\./g, '\\.')
    .replace(/\!/g, '\\!');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
function formatGift(gift) {
  const emoji = gift.sticker?.emoji || 'üéÅ';
  const starCount = gift.star_count || 0;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∞—Ä–∫–µ
  let message = `${emoji} *–ü–æ–¥–∞—Ä–æ–∫*\n`;
  message += `üí´ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${starCount} –∑–≤–µ–∑–¥\n`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É–ª—É—á—à–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
  if (gift.upgrade_star_count !== undefined) {
    message += `‚≠ê –£–ª—É—á—à–µ–Ω–∏–µ: ${gift.upgrade_star_count} –∑–≤–µ–∑–¥\n`;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ–¥–∞—Ä–∫–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
  if (gift.total_count !== undefined) {
    message += `üìä –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ: ${gift.total_count}\n`;
  }
  
  if (gift.remaining_count !== undefined) {
    message += `üîÑ –û—Å—Ç–∞–ª–æ—Å—å: ${gift.remaining_count}\n`;
    
    // –ï—Å–ª–∏ –æ–±–∞ –ø–æ–ª—è (total_count –∏ remaining_count) –¥–æ—Å—Ç—É–ø–Ω—ã, –º–æ–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç
    if (gift.total_count !== undefined && gift.total_count > 0) {
      const percentRemaining = Math.round((gift.remaining_count / gift.total_count) * 100);
      message += `üìà –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: ${percentRemaining}%\n`;
    }
  }
  
  message += `üÜî ID: ${safeMarkdown(gift.id)}\n`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ —Å—Ç–∏–∫–µ—Ä–∞
  if (gift.sticker && gift.sticker.type) {
    message += `üìã –¢–∏–ø: ${safeMarkdown(gift.sticker.type)}\n`;
  }
  
  return message;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∞—Ä–∫–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function generateDetailedInfo(gift) {
  const lines = [];
  lines.push(`ID: ${gift.id}`);
  lines.push(`–ó–≤–µ–∑–¥—ã: ${gift.star_count}`);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
  if (gift.upgrade_star_count !== undefined) {
    lines.push(`–°—Ç–æ–∏–º–æ—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏—è: ${gift.upgrade_star_count} –∑–≤–µ–∑–¥`);
  }
  
  if (gift.total_count !== undefined) {
    lines.push(`–í—Å–µ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤: ${gift.total_count}`);
  }
  
  if (gift.remaining_count !== undefined) {
    lines.push(`–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥–∞—Ä–∫–æ–≤: ${gift.remaining_count}`);
    
    // –†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–¥–∞—Ä–∫–æ–≤
    if (gift.total_count !== undefined && gift.total_count > 0) {
      const percentRemaining = Math.round((gift.remaining_count / gift.total_count) * 100);
      lines.push(`–ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: ${percentRemaining}%`);
    }
  }
  
  // if (gift.sticker) {
  //   lines.push(`–≠–º–æ–¥–∑–∏: ${gift.sticker.emoji}`);
  //   lines.push(`–¢–∏–ø: ${gift.sticker.type}`);
  //   lines.push(`–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: ${gift.sticker.is_animated ? '–î–∞' : '–ù–µ—Ç'}`);
  //   lines.push(`–í–∏–¥–µ–æ: ${gift.sticker.is_video ? '–î–∞' : '–ù–µ—Ç'}`);
  //   if (gift.sticker.custom_emoji_id) {
  //     lines.push(`Custom Emoji ID: ${gift.sticker.custom_emoji_id}`);
  //   }
  // }
  
  return lines.join('\n');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–æ–≤ —á–µ—Ä–µ–∑ getAvailableGifts
async function getAvailableGifts() {
  try {
    // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
    const response = await fetch(`https://api.telegram.org/bot${token}/getAvailableGifts`);
    
    if (!response.ok) {
      throw new Error(`HTTP –æ—à–∏–±–∫–∞: ${response.status}`);
    }
    
    const data = await response.json();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
    if (!data.ok) {
      throw new Error(data.description || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ API');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ –ø—É—Ç–∏ result.gifts
    if (!data.result || !Array.isArray(data.result.gifts)) {
      console.log('–ü–æ–¥–∞—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –∏–º–µ—é—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
      return [];
    }
    
    return data.result.gifts;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤:', error.message);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö
function formatGiftSummary(gift, index) {
  const emoji = gift.sticker?.emoji || 'üéÅ';
  const stars = gift.star_count || 0;
  let summary = `${emoji} ${safeMarkdown(`${index}. –°—Ç–æ–∏–º–æ—Å—Ç—å: ${stars} –∑–≤–µ–∑–¥`)}`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
  if (gift.remaining_count !== undefined && gift.total_count !== undefined) {
    summary += safeMarkdown(` [${gift.remaining_count}/${gift.total_count}]`);
  } else if (gift.remaining_count !== undefined) {
    summary += safeMarkdown(` [–û—Å—Ç–∞–ª–æ—Å—å: ${gift.remaining_count}]`);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–µ–Ω–∏—è
  if (gift.upgrade_star_count !== undefined) {
    summary += safeMarkdown(` (–£–ª—É—á—à–µ–Ω–∏–µ: ${gift.upgrade_star_count} ‚≠ê)`);
  }
  
  return summary;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ (–±–æ–ª–µ–µ —Ä–µ–¥–∫–∏–µ –±—É–¥—É—Ç –ø–µ—Ä–≤—ã–º–∏)
function sortGiftsByRarity(gifts) {
  return [...gifts].sort((a, b) => {
    // –ï—Å–ª–∏ —É –æ–±–æ–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –µ—Å—Ç—å total_count, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (—Ä–µ–¥–∫–∏–µ –ø–µ—Ä–≤—ã–º–∏)
    if (a.total_count !== undefined && b.total_count !== undefined) {
      return a.total_count - b.total_count;
    }
    
    // –ï—Å–ª–∏ total_count –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –æ–¥–Ω–æ–≥–æ –∏–∑ –ø–æ–¥–∞—Ä–∫–æ–≤, –æ–Ω —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–µ–µ
    if (a.total_count !== undefined && b.total_count === undefined) {
      return -1; // a –∏–¥–µ—Ç –ø–µ—Ä–≤—ã–º
    }
    if (a.total_count === undefined && b.total_count !== undefined) {
      return 1; // b –∏–¥–µ—Ç –ø–µ—Ä–≤—ã–º
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç total_count, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ star_count (–±–æ–ª–µ–µ –¥–æ—Ä–æ–≥–∏–µ –ø–µ—Ä–≤—ã–º–∏)
    if (a.star_count && b.star_count) {
      return b.star_count - a.star_count;
    }
    
    // –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return 0;
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞
async function sendStickerInfo(chatId, gift) {
  try {
    if (!gift.sticker || !gift.sticker.file_id) {
      console.log('–°—Ç–∏–∫–µ—Ä –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç file_id');
      return;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º file_id
    await bot.sendSticker(chatId, gift.sticker.file_id, {
      caption: `–°—Ç–∏–∫–µ—Ä ${gift.sticker.emoji} (${gift.star_count} –∑–≤–µ–∑–¥)`
    });
  } catch (stickerError) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∏–∫–µ—Ä–∞:', stickerError.message);
    
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    // try {
    //   await bot.sendMessage(chatId, 
    //     `üñºÔ∏è *–°—Ç–∏–∫–µ—Ä:* ${gift.sticker.emoji}\n` +
    //     `üìè –†–∞–∑–º–µ—Ä—ã: ${gift.sticker.width}x${gift.sticker.height}\n` +
    //     `üîÑ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: ${gift.sticker.is_animated ? '–î–∞' : '–ù–µ—Ç'}\n` +
    //     `üé¨ –í–∏–¥–µ–æ: ${gift.sticker.is_video ? '–î–∞' : '–ù–µ—Ç'}`, 
    //     { parse_mode: 'Markdown' }
    //   );
    // } catch (msgError) {
    //   console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∏–∫–µ—Ä–µ:', msgError.message);
    // }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
function findGiftChanges(oldGift, newGift) {
  if (!oldGift || !newGift) return null;
  
  const changes = {};
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
  if (oldGift.star_count !== newGift.star_count) {
    changes.star_count = {
      old: oldGift.star_count,
      new: newGift.star_count
    };
  }
  
  if (oldGift.upgrade_star_count !== newGift.upgrade_star_count) {
    changes.upgrade_star_count = {
      old: oldGift.upgrade_star_count,
      new: newGift.upgrade_star_count
    };
  }
  
  if (oldGift.total_count !== newGift.total_count) {
    changes.total_count = {
      old: oldGift.total_count,
      new: newGift.total_count
    };
  }
  
  if (oldGift.remaining_count !== newGift.remaining_count) {
    changes.remaining_count = {
      old: oldGift.remaining_count,
      new: newGift.remaining_count
    };
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–∏–∫–µ—Ä–µ, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ –æ–±–æ–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
  if (oldGift.sticker && newGift.sticker) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —Å—Ç–∏–∫–µ—Ä–∞
    const stickerChanges = {};
    
    if (oldGift.sticker.emoji !== newGift.sticker.emoji) {
      stickerChanges.emoji = {
        old: oldGift.sticker.emoji,
        new: newGift.sticker.emoji
      };
    }
    
    if (oldGift.sticker.type !== newGift.sticker.type) {
      stickerChanges.type = {
        old: oldGift.sticker.type,
        new: newGift.sticker.type
      };
    }
    
    if (oldGift.sticker.is_animated !== newGift.sticker.is_animated) {
      stickerChanges.is_animated = {
        old: oldGift.sticker.is_animated,
        new: newGift.sticker.is_animated
      };
    }
    
    if (oldGift.sticker.is_video !== newGift.sticker.is_video) {
      stickerChanges.is_video = {
        old: oldGift.sticker.is_video,
        new: newGift.sticker.is_video
      };
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–∏–∫–µ—Ä–µ, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if (Object.keys(stickerChanges).length > 0) {
      changes.sticker = stickerChanges;
    }
  } else if (oldGift.sticker || newGift.sticker) {
    // –ï—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –∏–∑ –ø–æ–¥–∞—Ä–∫–æ–≤, —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º
    changes.sticker = {
      old: oldGift.sticker ? 'present' : 'absent',
      new: newGift.sticker ? 'present' : 'absent'
    };
  }
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
  return Object.keys(changes).length > 0 ? changes : null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø–æ–¥–∞—Ä–∫–µ
function formatGiftChanges(gift, changes) {
  const emoji = gift.sticker?.emoji || 'üéÅ';
  let message = `${emoji} *–ü–æ–¥–∞—Ä–æ–∫ ID: ${safeMarkdown(gift.id.slice(-8))}*\n`;
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª—è—Ö
  if (changes.star_count) {
    message += `üí´ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${changes.star_count.old || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'} ‚Üí ${changes.star_count.new || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}\n`;
  }
  
  if (changes.upgrade_star_count) {
    message += `‚≠ê –£–ª—É—á—à–µ–Ω–∏–µ: ${changes.upgrade_star_count.old || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'} ‚Üí ${changes.upgrade_star_count.new || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
  }
  
  if (changes.total_count) {
    message += `üìä –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ: ${changes.total_count.old || '–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ'} ‚Üí ${changes.total_count.new || '–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ'}\n`;
  }
  
  if (changes.remaining_count) {
    message += `üîÑ –û—Å—Ç–∞–ª–æ—Å—å: ${changes.remaining_count.old || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'} ‚Üí ${changes.remaining_count.new || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
    
    // –†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    if (changes.remaining_count.old && changes.remaining_count.new && gift.total_count) {
      const oldPercent = Math.round((changes.remaining_count.old / gift.total_count) * 100);
      const newPercent = Math.round((changes.remaining_count.new / gift.total_count) * 100);
      message += `üìà –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: ${oldPercent}% ‚Üí ${newPercent}%\n`;
    }
  }
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–∏–∫–µ—Ä–µ
  if (changes.sticker) {
    // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ —Å—Ç–∏–∫–µ—Ä–∞
    if (typeof changes.sticker === 'object' && changes.sticker.old !== 'present' && changes.sticker.new !== 'present') {
      message += `\n*–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–∏–∫–µ—Ä–µ:*\n`;
      
      if (changes.sticker.emoji) {
        message += `üî£ –≠–º–æ–¥–∑–∏: ${changes.sticker.emoji.old || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'} ‚Üí ${changes.sticker.emoji.new || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
      }
      
      if (changes.sticker.type) {
        message += `üìã –¢–∏–ø: ${safeMarkdown(changes.sticker.type.old || '–Ω–µ —É–∫–∞–∑–∞–Ω')} ‚Üí ${safeMarkdown(changes.sticker.type.new || '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n`;
      }
      
      if (changes.sticker.is_animated !== undefined) {
        message += `üé¨ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: ${changes.sticker.is_animated.old ? '–î–∞' : '–ù–µ—Ç'} ‚Üí ${changes.sticker.is_animated.new ? '–î–∞' : '–ù–µ—Ç'}\n`;
      }
      
      if (changes.sticker.is_video !== undefined) {
        message += `üìπ –í–∏–¥–µ–æ: ${changes.sticker.is_video.old ? '–î–∞' : '–ù–µ—Ç'} ‚Üí ${changes.sticker.is_video.new ? '–î–∞' : '–ù–µ—Ç'}\n`;
      }
    } else {
      // –ï—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∏–ª–∏ —É–¥–∞–ª–µ–Ω
      message += `üìé –°—Ç–∏–∫–µ—Ä: ${changes.sticker.old === 'present' ? '–ë—ã–ª' : '–û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª'} ‚Üí ${changes.sticker.new === 'present' ? '–ï—Å—Ç—å' : '–£–¥–∞–ª–µ–Ω'}\n`;
    }
  }
  
  return message;
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async function checkAndNotify(chatId) {
  try {
    console.log(`[${new Date().toLocaleTimeString()}] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤...`);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à
    const cachedGifts = loadGiftsCache();
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤
    const currentGifts = await getAvailableGifts();
    
    if (currentGifts.length === 0) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤');
      return;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ (–∫—ç—à –ø—É—Å—Ç), –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–∞—Ä–∫–∏
    if (cachedGifts.length === 0) {
      console.log(`–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫, —Å–æ—Ö—Ä–∞–Ω—è–µ–º ${currentGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –∫—ç—à`);
      saveGiftsCache(currentGifts);
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–∫–∏ –ø–µ—Ä–µ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º (—Ä–µ–¥–∫–∏–µ –ø–µ—Ä–≤—ã–º–∏)
      const sortedGifts = sortGiftsByRarity(currentGifts);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      let message = `üéÅ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏*\n\n–ù–∞–π–¥–µ–Ω–æ ${currentGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤.\n\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ 5 —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
      if (sortedGifts.length > 0) {
        message += `*–°–∞–º—ã–µ —Ä–µ–¥–∫–∏–µ –ø–æ–¥–∞—Ä–∫–∏:*\n\n`;
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–≤—ã—Ö 5 (–∏–ª–∏ –º–µ–Ω—å—à–µ) –ø–æ–¥–∞—Ä–∫–∞—Ö
        const giftsToShow = Math.min(sortedGifts.length, 5);
        for (let i = 0; i < giftsToShow; i++) {
          const gift = sortedGifts[i];
          
          message += `${i+1}. ${gift.sticker?.emoji || 'üéÅ'} `;
          message += `*${gift.star_count || 0}‚≠ê*`;
          
          if (gift.total_count !== undefined) {
            message += ` (–õ–∏–º–∏—Ç: ${gift.total_count})`;
          }
          
          if (gift.remaining_count !== undefined) {
            message += ` [–û—Å—Ç–∞–ª–æ—Å—å: ${gift.remaining_count}]`;
          }
          
          message += `\nID: ${gift.id.slice(-8)}\n\n`;
        }
        
        message += `–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /list`;
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
      
      // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∞—Ä–∫–∞—Ö
      let detailedInfo = sortedGifts.map((gift, index) => {
        return `=== –ü–æ–¥–∞—Ä–æ–∫ #${index + 1} ===\n${generateDetailedInfo(gift)}\n`;
      }).join('\n');
      
      fs.writeFileSync(path.join(dataDir, 'telegram-gifts-details.txt'), detailedInfo);
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ä–∫–∞—Ö –≤ —Ñ–∞–π–ª telegram-gifts-details.txt');
      
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –ø–æ–¥–∞—Ä–∫–∏
    const giftsChanged = haveGiftsChanged(cachedGifts, currentGifts);
    
    // –ï—Å–ª–∏ –ø–æ–¥–∞—Ä–∫–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫—ç—à–∞
    if (giftsChanged) {
      console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫—ç—à–∞...');
      saveGiftsCacheHistory(cachedGifts);
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–µ –∏ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏
    const newGifts = findNewGifts(cachedGifts, currentGifts);
    const removedGifts = findRemovedGifts(cachedGifts, currentGifts);
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥–∞—Ä–∫–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –ø–æ–ª—è—Ö
    const modifiedGifts = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ç–µ–∫—É—â–∏–π –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    for (const currentGift of currentGifts) {
      // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–æ–¥–∞—Ä–æ–∫ –≤ –∫—ç—à–µ
      const cachedGift = cachedGifts.find(cached => cached.id === currentGift.id);
      
      // –ï—Å–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
      if (cachedGift) {
        const changes = findGiftChanges(cachedGift, currentGift);
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–æ–∫ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
        if (changes) {
          modifiedGifts.push({
            gift: currentGift,
            changes: changes
          });
        }
      }
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å–ø–∏—Å–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
    const sortedNewGifts = sortGiftsByRarity(newGifts);
    const sortedRemovedGifts = sortGiftsByRarity(removedGifts);
    const sortedModifiedGifts = sortGiftsByRarity(modifiedGifts.map(item => item.gift)).map(gift => {
      const modifiedItem = modifiedGifts.find(item => item.gift.id === gift.id);
      return modifiedItem;
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
    saveGiftsCache(currentGifts);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤
    if (sortedNewGifts.length > 0 || sortedRemovedGifts.length > 0 || sortedModifiedGifts.length > 0) {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –û–î–ù–û –±–æ–ª—å—à–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
      let fullMessage = 'üîÑ *–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤*\n\n';
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
      if (sortedNewGifts.length > 0) {
        fullMessage += `‚úÖ *–î–æ–±–∞–≤–ª–µ–Ω–æ ${sortedNewGifts.length} –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤:*\n`;
        for (let i = 0; i < sortedNewGifts.length; i++) {
          fullMessage += formatGiftSummary(sortedNewGifts[i], i+1) + '\n';
        }
        fullMessage += '\n';
      }
      
      if (sortedRemovedGifts.length > 0) {
        fullMessage += `‚ùå *–£–¥–∞–ª–µ–Ω–æ ${sortedRemovedGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤:*\n`;
        for (let i = 0; i < sortedRemovedGifts.length; i++) {
          fullMessage += formatGiftSummary(sortedRemovedGifts[i], i+1) + '\n';
        }
        fullMessage += '\n';
      }
      
      if (sortedModifiedGifts.length > 0) {
        fullMessage += `üìù *–ò–∑–º–µ–Ω–µ–Ω–æ ${sortedModifiedGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤:*\n`;
        for (let i = 0; i < sortedModifiedGifts.length; i++) {
          const { gift, changes } = sortedModifiedGifts[i];
          const emoji = gift.sticker?.emoji || 'üéÅ';
          
          let changeDesc = `${emoji} ${safeMarkdown(`${i+1}. ID: ${gift.id.slice(-8)}`)}`;
          const changeFields = Object.keys(changes);
          if (changeFields.length > 0) {
            changeDesc += safeMarkdown(` (–∏–∑–º–µ–Ω–µ–Ω–∏—è: ${changeFields.join(', ')})`);
          }
          
          fullMessage += changeDesc + '\n';
        }
        fullMessage += '\n';
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
      if (sortedNewGifts.length > 0) {
        fullMessage += `üì¶ *–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö:*\n\n`;
        
        for (const gift of sortedNewGifts) {
          fullMessage += formatGift(gift) + '\n\n';
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
      if (sortedRemovedGifts.length > 0) {
        fullMessage += `üóëÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö:*\n\n`;
        
        for (const gift of sortedRemovedGifts) {
          fullMessage += formatGift(gift) + '\n\n';
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
      if (sortedModifiedGifts.length > 0) {
        fullMessage += `‚úèÔ∏è *–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö:*\n\n`;
        
        for (const { gift, changes } of sortedModifiedGifts) {
          fullMessage += formatGiftChanges(gift, changes) + '\n\n';
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      // Telegram –∏–º–µ–µ—Ç –ª–∏–º–∏—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 4096 —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
      const MAX_MESSAGE_LENGTH = 4000; // –û—Å—Ç–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å
      
      if (fullMessage.length <= MAX_MESSAGE_LENGTH) {
        // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –æ–¥–∏–Ω –±–ª–æ–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        await bot.sendMessage(chatId, fullMessage, { parse_mode: 'Markdown' });
      } else {
        // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
        console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (${fullMessage.length} —Å–∏–º–≤–æ–ª–æ–≤), —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏`);
        
        // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
        let summaryMessage = 'üîÑ *–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤*\n\n';
        
        if (sortedNewGifts.length > 0) {
          summaryMessage += `‚úÖ *–î–æ–±–∞–≤–ª–µ–Ω–æ ${sortedNewGifts.length} –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤*\n`;
        }
        
        if (sortedRemovedGifts.length > 0) {
          summaryMessage += `‚ùå *–£–¥–∞–ª–µ–Ω–æ ${sortedRemovedGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤*\n`;
        }
        
        if (sortedModifiedGifts.length > 0) {
          summaryMessage += `üìù *–ò–∑–º–µ–Ω–µ–Ω–æ ${sortedModifiedGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤*\n`;
        }
        
        await bot.sendMessage(chatId, summaryMessage, { parse_mode: 'Markdown' });
        
        // –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≥—Ä—É–ø–ø–∏—Ä—É—è –∏—Ö
        // –ù–æ–≤—ã–µ –ø–æ–¥–∞—Ä–∫–∏
        if (sortedNewGifts.length > 0) {
          let newGiftsMessage = `üì¶ *–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö:*\n\n`;
          
          for (const gift of sortedNewGifts) {
            const giftInfo = formatGift(gift) + '\n\n';
            
            // –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ –ø—Ä–µ–≤—ã—Å–∏—Ç –ª–∏–º–∏—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ
            if (newGiftsMessage.length + giftInfo.length > MAX_MESSAGE_LENGTH) {
              await bot.sendMessage(chatId, newGiftsMessage, { parse_mode: 'Markdown' });
              newGiftsMessage = giftInfo;
            } else {
              newGiftsMessage += giftInfo;
            }
          }
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à—É—é—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
          if (newGiftsMessage.length > 0) {
            await bot.sendMessage(chatId, newGiftsMessage, { parse_mode: 'Markdown' });
          }
        }
        
        // –£–¥–∞–ª–µ–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏
        if (sortedRemovedGifts.length > 0) {
          let removedGiftsMessage = `üóëÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö:*\n\n`;
          
          for (const gift of sortedRemovedGifts) {
            const giftInfo = formatGift(gift) + '\n\n';
            
            if (removedGiftsMessage.length + giftInfo.length > MAX_MESSAGE_LENGTH) {
              await bot.sendMessage(chatId, removedGiftsMessage, { parse_mode: 'Markdown' });
              removedGiftsMessage = giftInfo;
            } else {
              removedGiftsMessage += giftInfo;
            }
          }
          
          if (removedGiftsMessage.length > 0) {
            await bot.sendMessage(chatId, removedGiftsMessage, { parse_mode: 'Markdown' });
          }
        }
        
        // –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏
        if (sortedModifiedGifts.length > 0) {
          let modifiedGiftsMessage = `‚úèÔ∏è *–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö:*\n\n`;
          
          for (const { gift, changes } of sortedModifiedGifts) {
            const giftInfo = formatGiftChanges(gift, changes) + '\n\n';
            
            if (modifiedGiftsMessage.length + giftInfo.length > MAX_MESSAGE_LENGTH) {
              await bot.sendMessage(chatId, modifiedGiftsMessage, { parse_mode: 'Markdown' });
              modifiedGiftsMessage = giftInfo;
            } else {
              modifiedGiftsMessage += giftInfo;
            }
          }
          
          if (modifiedGiftsMessage.length > 0) {
            await bot.sendMessage(chatId, modifiedGiftsMessage, { parse_mode: 'Markdown' });
          }
        }
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã –æ—Ç–¥–µ–ª—å–Ω–æ (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ)
      const MAX_STICKERS_TO_SEND = 3;
      if (sortedNewGifts.length > 0) {
        const stickersToSend = Math.min(sortedNewGifts.length, MAX_STICKERS_TO_SEND);
        
        for (let i = 0; i < stickersToSend; i++) {
          const gift = sortedNewGifts[i];
          await sendStickerInfo(chatId, gift);
          // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å—Ç–∏–∫–µ—Ä–∞–º–∏
          await new Promise(resolve => setTimeout(resolve, 300));
        }
      }
    } else {
      console.log('–ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤:', error.message);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    try {
      await bot.sendMessage(chatId, 
        `‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤: ${error.message}`, 
        { parse_mode: 'HTML' } // –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–º–µ—Å—Ç–æ Markdown –ø—Ä–∏ –æ—à–∏–±–∫–µ
      );
    } catch (sendError) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', sendError.message);
    }
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
async function startMonitoring() {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID —á–∞—Ç–∞
  const chatId = loadChatId();
  
  if (!chatId) {
    console.log('ID —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É.');
    startBotForChatId();
    return;
  }
  
  console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID —á–∞—Ç–∞: ${chatId}`);
  console.log(`–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ ${CHECK_INTERVAL / 1000} —Å–µ–∫—É–Ω–¥.`);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  await bot.sendMessage(chatId, 
    `ü§ñ *–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞–ø—É—â–µ–Ω*\n\n–ë—É–¥—É –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∫–∞–∂–¥—ã–µ ${CHECK_INTERVAL / 1000} —Å–µ–∫—É–Ω–¥ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö.`, 
    { parse_mode: 'Markdown' }
  );
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–∞–∑—É
  await checkAndNotify(chatId);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  setInterval(() => checkAndNotify(chatId), CHECK_INTERVAL);
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
  process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));
  process.on('SIGINT', () => gracefulShutdown('SIGINT'));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
async function gracefulShutdown(signal) {
  console.log(`–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª ${signal}, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...`);
  
  try {
    const chatId = loadChatId();
    if (chatId) {
      await bot.sendMessage(chatId, 
        '‚ö†Ô∏è *–ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è*\n\n–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', 
        { parse_mode: 'Markdown' }
      );
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ:', error.message);
  }
  
  console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  process.exit(0);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞
function startBotForChatId() {
  console.log('–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞...');
  console.log('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É, —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å ID —á–∞—Ç–∞');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∂–∏–º polling
  bot.startPolling();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
  bot.onText(/\/start/, async (msg) => {
    const receivedChatId = msg.chat.id;
    console.log(`–ü–æ–ª—É—á–µ–Ω ID —á–∞—Ç–∞: ${receivedChatId}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —á–∞—Ç–∞
    if (saveChatId(receivedChatId)) {
      await bot.sendMessage(receivedChatId, 
        `‚úÖ –í–∞—à ID —á–∞—Ç–∞ (${receivedChatId}) —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\n\n–¢–µ–ø–µ—Ä—å –∑–∞–ø—É—â—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤.`
      );
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
      bot.stopPolling();
      startMonitoring();
    } else {
      await bot.sendMessage(receivedChatId, 
        '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à ID —á–∞—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º.'
      );
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  process.on('SIGTERM', () => {
    bot.stopPolling();
    process.exit(0);
  });
  
  process.on('SIGINT', () => {
    bot.stopPolling();
    process.exit(0);
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∂–∏–º–∞ polling
function startPolling(chatId) {
  console.log(`–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ polling —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º ${CHECK_INTERVAL} –º—Å`);
  
  // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º polling
  bot.startPolling();
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  bot.sendMessage(chatId, 
    `ü§ñ *–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞–ø—É—â–µ–Ω*\n\n–ë—É–¥—É –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∫–∞–∂–¥—ã–µ ${CHECK_INTERVAL / 1000} —Å–µ–∫—É–Ω–¥ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö.`, 
    { parse_mode: 'Markdown' }
  );
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–∞–∑—É
  checkAndNotify(chatId);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  setInterval(() => checkAndNotify(chatId), CHECK_INTERVAL);
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
  process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));
  process.on('SIGINT', () => gracefulShutdown('SIGINT'));
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤
  bot.onText(/\/check/, (msg) => {
    const receivedChatId = msg.chat.id;
    if (receivedChatId.toString() === chatId.toString()) {
      bot.sendMessage(chatId, 'üîç –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤...');
      checkAndNotify(chatId);
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
  bot.onText(/\/list/, async (msg) => {
    const receivedChatId = msg.chat.id;
    if (receivedChatId.toString() === chatId.toString()) {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–∞—Ä–∫–∏
      const currentGifts = await getAvailableGifts();
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤
      if (currentGifts.length === 0) {
        await bot.sendMessage(chatId, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤');
        return;
      }
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–∫–∏ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
      const sortedGifts = sortGiftsByRarity(currentGifts);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      await bot.sendMessage(chatId, 
        `üéÅ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ (–≤—Å–µ–≥–æ ${sortedGifts.length})*\n\n–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏, —Å–∞–º—ã–µ —Ä–µ–¥–∫–∏–µ –ø–µ—Ä–≤—ã–µ:`, 
        { parse_mode: 'Markdown' }
      );
      
      // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –ø–æ –≤—Å–µ–º –ø–æ–¥–∞—Ä–∫–∞–º
      let summaryMessage = '';
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–∫–∏ –ø–æ total_count –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
      const giftsByTotal = {};
      for (const gift of sortedGifts) {
        const totalKey = gift.total_count !== undefined ? gift.total_count.toString() : 'unlimited';
        if (!giftsByTotal[totalKey]) {
          giftsByTotal[totalKey] = [];
        }
        giftsByTotal[totalKey].push(gift);
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –≥—Ä—É–ø–ø–∞–º
      for (const [totalKey, gifts] of Object.entries(giftsByTotal)) {
        const totalLabel = totalKey === 'unlimited' ? '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ' : `–õ–∏–º–∏—Ç: ${totalKey}`;
        summaryMessage += `\n*${totalLabel}* (${gifts.length} —à—Ç.)\n`;
        
        for (let i = 0; i < gifts.length; i++) {
          const gift = gifts[i];
          const emoji = gift.sticker?.emoji || 'üéÅ';
          const stars = gift.star_count || 0;
          const remaining = gift.remaining_count !== undefined ? ` [${gift.remaining_count}/${totalKey}]` : '';
          
          summaryMessage += `${emoji} ${stars}‚≠ê${remaining}\n`;
          
          // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–º, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ
          if (summaryMessage.length > 3000) {
            await bot.sendMessage(chatId, summaryMessage, { parse_mode: 'Markdown' });
            summaryMessage = '';
          }
        }
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –ø—É—Å—Ç–æ–µ
      if (summaryMessage.length > 0) {
        await bot.sendMessage(chatId, summaryMessage, { parse_mode: 'Markdown' });
      }
      
      // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
      await bot.sendMessage(chatId, 
        'üîç *–•–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö?*\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /details –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.', 
        { parse_mode: 'Markdown' }
      );
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
  bot.onText(/\/details/, async (msg) => {
    const receivedChatId = msg.chat.id;
    if (receivedChatId.toString() === chatId.toString()) {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–∞—Ä–∫–∏
      const currentGifts = await getAvailableGifts();
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤
      if (currentGifts.length === 0) {
        await bot.sendMessage(chatId, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤');
        return;
      }
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–∫–∏ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
      const sortedGifts = sortGiftsByRarity(currentGifts);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ 5 —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
      await bot.sendMessage(chatId, 
        'üîç *–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö:*', 
        { parse_mode: 'Markdown' }
      );
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–µ –±–æ–ª–µ–µ 5)
      const giftsToShow = Math.min(sortedGifts.length, 5);
      
      for (let i = 0; i < giftsToShow; i++) {
        const gift = sortedGifts[i];
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
        await bot.sendMessage(chatId, formatGift(gift), { parse_mode: 'Markdown' });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä
        await sendStickerInfo(chatId, gift);
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        await new Promise(resolve => setTimeout(resolve, 300));
      }
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏
  bot.onText(/\/help/, (msg) => {
    const receivedChatId = msg.chat.id;
    if (receivedChatId.toString() === chatId.toString()) {
      bot.sendMessage(chatId, 
        'üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n' +
        '/check - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤\n' +
        '/list - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤\n' +
        '/details - –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö\n' +
        '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ',
        { parse_mode: 'Markdown' }
      );
    }
  });
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
startMonitoring().catch(error => {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:', error.message);
}); 